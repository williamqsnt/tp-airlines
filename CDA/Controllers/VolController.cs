using CDA.Models;
using FireSharp.Config;
using FireSharp.Interfaces;
using FireSharp.Response;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Rendering;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace CDA.Controllers
{
    public class VolController : Controller
    {
        private readonly IFirebaseConfig config = new FirebaseConfig
        {
            AuthSecret = "4ziVxinSXVTinYwMpcjIFtS8n2wwN6ER0C9Y5C81",
            BasePath = "https://tp-company-aerienne-default-rtdb.europe-west1.firebasedatabase.app/"
        };

        private IFirebaseClient client;

        public VolController()
        {
            client = new FireSharp.FirebaseClient(config);
        }

        public ActionResult Index()
        {
            FirebaseResponse responseVols = client.Get("Vols");
            var volsData = JsonConvert.DeserializeObject<Dictionary<string, Vol>>(responseVols.Body);

            FirebaseResponse responseVilles = client.Get("Villes");
            var villesData = JsonConvert.DeserializeObject<Dictionary<string, Ville>>(responseVilles.Body);

            var list = new List<Vol>();

            if (volsData != null)
            {
                foreach (var item in volsData)
                {
                    var vol = item.Value;
                    vol.VolId = item.Key; // Assurer que l'ID du vol est bien défini

                    // Correction: Utiliser les identifiants pour récupérer les objets Ville
                    // Assumer que chaque vol a des propriétés VilleDepartId et VilleArriveeId pour ces associations
                    if (villesData != null)
                    {
                        if (vol.VilleDepart != null && villesData.ContainsKey(vol.VilleDepart.IdVille))
                        {
                            vol.VilleDepart = villesData[vol.VilleDepart.IdVille];
                        }
                        if (vol.VilleArrivee != null && villesData.ContainsKey(vol.VilleArrivee.IdVille))
                        {
                            vol.VilleArrivee = villesData[vol.VilleArrivee.IdVille];
                        }
                    }

                    list.Add(vol);
                }
            }

            return View(list);
        }



        // GET: VolController/Details/5
        public ActionResult Details(string id)
        {
            FirebaseResponse response = client.Get($"Vols/{id}");
            Vol vol = JsonConvert.DeserializeObject<Vol>(response.Body);
            return View(vol);
        }

        // GET: VolController/Create
        public ActionResult Create()
        {
            FirebaseResponse response = client.Get("Villes"); // Assure-toi que "Villes" est le bon chemin dans ta base de données Firebase
            dynamic data = JsonConvert.DeserializeObject<dynamic>(response.Body);
            var villesList = new List<Ville>();
            if (data != null)
            {
                foreach (var item in data)
                {
                    villesList.Add(JsonConvert.DeserializeObject<Ville>(((JProperty)item).Value.ToString()));
                }
            }

            ViewBag.Villes = new SelectList(villesList, "IdVille", "Nom");
            return View();
        }

        // POST: VolController/Create
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create(Vol vol)
        {
            try
            {
                PushResponse response = client.Push("Vols/", vol);
                vol.VolId = response.Result.name; // VolId will be auto generated by Firebase
                client.Set($"Vols/{vol.VolId}", vol);
                return RedirectToAction(nameof(Index));
            }
            catch
            {
                return View(vol);
            }
        }

        // GET: VolController/Edit/5
        public ActionResult Edit(string id)
        {
            FirebaseResponse response = client.Get($"Vols/{id}");
            Vol vol = JsonConvert.DeserializeObject<Vol>(response.Body);
            return View(vol);
        }

        // POST: VolController/Edit/5
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit(string id, Vol vol)
        {
            try
            {
                client.Update($"Vols/{id}", vol);
                return RedirectToAction(nameof(Index));
            }
            catch
            {
                return View(vol);
            }
        }

        // GET: VolController/Delete/5
        public ActionResult Delete(string id)
        {
            FirebaseResponse response = client.Get($"Vols/{id}");
            Vol vol = JsonConvert.DeserializeObject<Vol>(response.Body);
            return View(vol);
        }

        // POST: VolController/Delete/5
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Delete(string id, IFormCollection collection)
        {
            try
            {
                client.Delete($"Vols/{id}");
                return RedirectToAction(nameof(Index));
            }
            catch
            {
                return View();
            }
        }
    }
}

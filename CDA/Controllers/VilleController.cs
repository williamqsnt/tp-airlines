using CDA.Models;
using FireSharp.Config;
using FireSharp.Interfaces;
using FireSharp.Response;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace CDA.Controllers
{
    public class VilleController : Controller
    {
        private readonly IFirebaseConfig config = new FirebaseConfig
        {
            AuthSecret = "4ziVxinSXVTinYwMpcjIFtS8n2wwN6ER0C9Y5C81",
            BasePath = "https://tp-company-aerienne-default-rtdb.europe-west1.firebasedatabase.app"
        };

        private IFirebaseClient client;

        public VilleController()
        {
            client = new FireSharp.FirebaseClient(config);
        }

        // GET: VilleController
        public ActionResult Index()
        {
            FirebaseResponse response = client.Get("Villes");
            dynamic data = JsonConvert.DeserializeObject<dynamic>(response.Body);
            var list = new List<Ville>();
            if (data != null)
            {
                foreach (var item in data)
                {
                    list.Add(JsonConvert.DeserializeObject<Ville>(((JProperty)item).Value.ToString()));
                }
            }
            return View(list);
        }

        // GET: VilleController/Details/5
        public ActionResult Details(string id)
        {
            FirebaseResponse response = client.Get($"Villes/{id}");
            Ville ville = JsonConvert.DeserializeObject<Ville>(response.Body);
            return View(ville);
        }

        // GET: VilleController/Create
        public ActionResult Create()
        {
            return View();
        }

        // POST: VilleController/Create
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create(Ville ville)
        {
            try
            {
                PushResponse response = client.Push("Villes/", ville);
                ville.IdVille = response.Result.name; // IdVille will be auto generated by Firebase
                client.Set($"Villes/{ville.IdVille}", ville);
                return RedirectToAction(nameof(Index));
            }
            catch
            {
                return View(ville);
            }
        }

        // GET: VilleController/Edit/5
        public ActionResult Edit(string id)
        {
            FirebaseResponse response = client.Get($"Villes/{id}");
            Ville ville = JsonConvert.DeserializeObject<Ville>(response.Body);
            return View(ville);
        }

        // POST: VilleController/Edit/5
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit(string id, Ville ville)
        {
            try
            {
                client.Update($"Villes/{id}", ville);
                return RedirectToAction(nameof(Index));
            }
            catch
            {
                return View(ville);
            }
        }

        // GET: VilleController/Delete/5
        public ActionResult Delete(string id)
        {
            FirebaseResponse response = client.Get($"Villes/{id}");
            Ville ville = JsonConvert.DeserializeObject<Ville>(response.Body);
            return View(ville);
        }

        // POST: VilleController/Delete/5
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Delete(string id, IFormCollection collection)
        {
            try
            {
                client.Delete($"Villes/{id}");
                return RedirectToAction(nameof(Index));
            }
            catch
            {
                return View();
            }
        }
    }
}
